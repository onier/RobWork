# -*- cmake -*-

# Here we have a bunch of user defined commands that are being loaded at the
# very start of the makefile generation process. You can use this setup file to
# for example change compiler flags.

# Enable the RW_ASSERT() macro. [ON|OFF]
SET(RW_ENABLE_ASSERT ON)

# Enable the use of the default RW_CXX_FLAGS. These will be appended to CMAKE_CXX_FLAGS
SET(RW_ENABLE_CXX_FLAGS ON)

# Enable building tests, examples and sandbox
SET(RW_BUILD_TESTS OFF)
SET(RW_BUILD_EXAMPLES OFF)
SET(RW_BUILD_SANDBOX ON)

# If you want to use the new Xerces based XML loader then set to ON. But make sure that
# cmake is able to find the xerces include dir and lib dir
SET(USE_XERCES ON)
SET(XERCESC_INCLUDE_DIR "$ENV{XERCES_ROOT}/include")
SET(XERCESC_LIB_DIR "$ENV{XERCES_ROOT}/lib")

# Specify the root dir of your boost installation if it is not autodetected
SET(BOOST_ROOT $ENV{BOOST_ROOT})
SET(BOOST_LIBRARYDIR "${BOOST_ROOT}/lib/") # if installed in non-standard dir
SET(BOOST_INCLUDEDIR "${BOOST_ROOT}/include")

# If you want to use Lua scripting then enable it    
SET(USE_LUA ON)
SET(LUA_INCLUDE_DIR "${RW_ROOT}/ext/lua/src/")
SET(LUA_LIBRARY_DIR "${RW_ROOT}/libs/release/")
SET(TOLUA_CMD "${RW_ROOT}/bin/Release/tolua")
SET(TOLUA_INCLUDE_DIR "${RW_ROOT}/ext/tolua/include/")
SET(TOLUA_LIBRARY_DIR "${RW_ROOT}/libs/Release/")

# Specify if you want to enable the use of yaobi for collision detection
SET(USE_YAOBI on)
SET(YAOBI_INCLUDE_DIR "${RW_ROOT}/ext/yaobi")
#SET(YAOBI_LIBRARY_DIR "") # If you use the yaobi from ext then it will be placed in the default 

# Specify if you want to enable the use of pqp for collision detection
SET(USE_PQP on)
SET(PQP_INCLUDE_DIR "${RW_ROOT}/ext/PQP")
#SET(PQP_LIBRARY_DIR "${RW_ROOT}/ext/PQP")

