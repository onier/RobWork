
$#include <rw/math.hpp>
$#include <rw/common.hpp>

$#include "LuaCommon.hpp"



namespace rwlibs { namespace lua { namespace common {
    /*
  		These are the classes and functions we export.
	*/
	void info(const std::string& msg);
	
	void debug(const std::string& msg);
	
	void warn(const std::string& msg);
	
	void error(const std::string& msg);
	
}}}

/*
  We provide a rw module of wrapper functions and utility functions.

  These functions are compiled into the executable, so that the user never has
  to worry about the installation of the rw module.

  Also the user need not know about what namespace all of the above classes are
  actually located in.
*/
$[
	local print_to_log = true

    -- Forward the global print functions to the rw.print functions
    -- whenever rwi.output is defined.
    local global_print = print
    function print(...)
        if print_to_log then
	        for i, v in ipairs{...} do
	            if i > 1 then rwlibs.lua.common:info('\t') end
	            rwlibs.lua.common:info(tostring(v))
	        end
	        rwlibs.lua.common:info('\n')
        else
            global_print(...)
        end
    end


$]
