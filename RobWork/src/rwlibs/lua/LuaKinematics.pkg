
$#include <rw/kinematics.hpp>

$#include "LuaMath.hpp"
$#include "LuaKinematics.hpp"

$using namespace rwlibs::lua;

namespace rwlibs { namespace lua { namespace kinematics {
    /*
  These are the classes and functions we export.
  */
 	class State: public rw::kinematics::State
	{
	public:
		State copy();
		unsigned int size() const;
		std::string __tostring() const;
	};

	class Frame
	{
	public:
		Frame(rw::kinematics::Frame* frame);

		math::Transform3D getTransform(const State& state) const;
		int getDOF() const;
		Frame* getParent();
		Frame* getParent(const State& state);
		void attachTo(Frame* parent, State& state);

		bool isDAF();

		math::Transform3D wTt(const State& state) const;
		math::Transform3D tTf(const Frame& frame, const State& state) const;

		const rw::kinematics::Frame* get() const;
		rw::kinematics::Frame* get();

		std::string __tostring() const;

		rw::kinematics::Frame* _frame;
	};

	class FixedFrame: public Frame
	{
	public:
		FixedFrame(rw::kinematics::FixedFrame* frame);

		void setTransform(const math::Transform3D& transform);


		const rw::kinematics::FixedFrame* get() const;
		std::string __tostring() const;

		rw::kinematics::FixedFrame* _fframe;
	};

	class MovableFrame: public Frame
	{
	public:
		// tolua_begin
		MovableFrame(rw::kinematics::MovableFrame* frame);

		void setTransform(const math::Transform3D& transform, State& state);

		const rw::kinematics::MovableFrame* get() const;
		std::string __tostring() const;

		rw::kinematics::MovableFrame* _mframe;
	};

	math::Transform3D frameTframe(
		const Frame* from, const Frame* to, const State& state);

	math::Transform3D worldTframe(const Frame* to, const State& state);

	Frame& worldFrame(Frame& frame, const State& state);

	void gripFrame(State& state, Frame& item, Frame& gripper);

	bool isDAF(const Frame& frame);
  


}}}

/*
  We provide a rw module of wrapper functions and utility functions.

  These functions are compiled into the executable, so that the user never has
  to worry about the installation of the rw module.

  Also the user need not know about what namespace all of the above classes are
  actually located in.
*/
//$[


//$]
